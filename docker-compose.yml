version:  '3.2'
services:
  nginx-server:
    build: ./dockerfiles/nginx/
    container_name: nginx-server
    ports:
      - "81:80"
    links:
      - "php-fpm"
    volumes:
#网站目录
      - ./app:/var/www/html
      - ./dockerfiles/nginx/conf.d:/etc/nginx/conf.d:ro
#日志文件
      - ./logs/nginx:/var/log/nginx

    depends_on:
      - redis-db
    restart: always
    expose:
      - "81"
      - "6379"
      - "3306"
      - "9000"
    command: nginx -g 'daemon off;'
  mysql-db:
    image: mysql:5.7
    container_name: mysql-db
#很重要导入到处数据
    volumes:
      - ./data/mysql:/var/lib/mysql:rw
      - ./dockerfiles/mysql/my.conf:/etc/my.conf:ro
    restart: always
    environment:
        MYSQL_ROOT_PASSWORD: zhaojun
        MYSQL_DATABASE: package_v1
        MYSQL_USER: zhaojun
        MYSQL_PASSWORD: zhaojun
  redis-db:
    build: ./dockerfiles/redis
    container_name: redis-db
    restart: always
    volumes:
      - ./data/redis:/data
    ports:
      - "6379:6379"
  php-fpm:
    build: ./dockerfiles/php/
    container_name: php-fpm
    restart: always
    volumes:
#网站目录
      - ./app:/var/www/html:rw
#配置文件
      - ./dockerfiles/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./dockerfiles/php/php-fpm.conf:/usr/local/etc/php-fpm.conf:ro

#挂载站点日志
      - ./logs/php-fpm:/var/log/php-fpm:rw
    depends_on:
      - mysql-db
      - redis-db
      - mvn
    links:
      - mysql-db
      - redis-db
      - mvn
      - tomcat-server
    command: php-fpm
##SSH运行环境构建
  tomcat-server:
    build: ./dockerfiles/tomcat/
    container_name: tomcat-server
    volumes:
      - ./app/jwebroot/target:/usr/local/tomcat/webapps/blogServer:rw
      - ./dockerfiles/tomcat/blog.xml:/usr/local/tomcat/conf/blog.xml
    ports:
      - "8081:8080"
    links:
      - mysql-db
      - redis-db
  mvn:
    container_name: mvn
    restart: always
    build: ./dockerfiles/jetty/
    volumes:
     - ./app/jwebroot:/server/jwebroot:rw
    working_dir: /server/jwebroot
    command: mvn jetty:run
    links:
      - mysql-db
      - redis-db
      - tomcat-server
    expose:
      - "8080"
    ports:
      - "8080:8080"
##爬虫
  node-spider:
      image: node
      container_name: node-spider
      volumes:
        - ./app/nodespider:/server/app
        - ./app/storage:/download:rw
      links:
        - mysql-db
        - redis-db
        - nginx-server
        - mvn
#      command: node /server/app/app.js
##第一次迁移数据所需的镜像 version0.3 README手动迁移
#  mysql-database:
#    image: mysql:5.7
#    volumes:
#      - ./data/backup:/data/backup
volumes:
  wwwroot:
    driver: local